package com.example.jangheejun.capptalk;

import android.app.Fragment;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.RecyclerView.ViewHolder;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.bumptech.glide.Glide;
import com.bumptech.glide.request.RequestOptions;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;
import java.util.List;

public class FragmentChat extends Fragment {

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.content_chat,container,false);

        RecyclerView recyclerView = (RecyclerView)view.findViewById(R.id.fragment_chat);
        recyclerView.setLayoutManager(new LinearLayoutManager(inflater.getContext()));
        recyclerView.setAdapter(new ChatFragmentRecyclerViewAdapter());

        return view;
    }

    class ChatFragmentRecyclerViewAdapter extends RecyclerView.Adapter<ViewHolder>{
        List<ChatList> chatLists;
        public ChatFragmentRecyclerViewAdapter(){

            chatLists = new ArrayList<>();
            FirebaseDatabase.getInstance().getReference().child("Users").child("uid1").child("UserRooms").addValueEventListener(new ValueEventListener() {
                @Override
                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                    chatLists.clear();
                    for(DataSnapshot snapshot : dataSnapshot.getChildren()){
                        chatLists.add(snapshot.getValue(ChatList.class));
                    }
                    notifyDataSetChanged();
                }

                @Override
                public void onCancelled(@NonNull DatabaseError databaseError) {

                }
            });

        }

        @NonNull
        @Override
        public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_chat,parent,false);

            return new CustomViewHolder(view);
        }

        @Override
        public void onBindViewHolder(@NonNull ViewHolder holder, int position) {

            Glide.with(holder.itemView.getContext())
                    .load(chatLists.get(position).getIcon())
                    .apply(new RequestOptions().circleCrop())
                    .into(((CustomViewHolder)holder).imageView);
            ((CustomViewHolder)holder).textView.setText(chatLists.get(position).getName());

        }

        @Override
        public int getItemCount() {
            return chatLists.size();
        }

        private class CustomViewHolder extends ViewHolder {
            public ImageView imageView;
            public TextView textView;

            public CustomViewHolder(View view) {
                super(view);
                imageView = (ImageView) view.findViewById(R.id.chat_image);
                textView = (TextView) view.findViewById(R.id.chat_text);
            }
        }
    }
}
